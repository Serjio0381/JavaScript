// Урок 4. Циклы и массивы
// Задание 1
// Необходимо с помощью цикла for вывести следующие 11 строк в консоль:
// 0 – это ноль
// 1 – нечетное число
// 2 – четное число
// 3 – нечетное число
// …
// 10 – четное число

// for (let i = 0; i <= 11; i++) {
//     if (i == 0) {
//         console.log(`${i} это ноль`);
//     }
//     if (i % 2 == 0) {
//         console.log(`${i} четное число`);
//     }
//     if (i % 2 !== 0) {
//         console.log(`${i} нечетное число`);
//     }
// }







// Задание 2
// Дан массив [1, 2, 3, 4, 5, 6, 7]
// Сделайте из этого массива следующий [1, 2, 3, 6, 7]

// const arr = [1, 2, 3, 4, 5, 6, 7];
// console.log(arr);
// arr.splice(3, 2);
// console.log(arr);





// Задание 3
// Используя Math.random() вам необходимо генерировать цифры от 0 до 9, и создать массив состоящий из 5 таких элементов
// 1. Рассчитать сумму элементов этого массива
// 2. Найти минимальное число
// 3. Найти есть ли в этом массиве число 3

// const arr = [];
// for (let i = 0; i < 5; i++) {
//     arr[i] = Math.floor(Math.random() * 9); // создан рандомный массив
//     if (arr[i] == 3) { // Ищем есть ли в этом массиве число 3
//         console.log('есть цифра 3');
//     }
// }
// console.log(arr);     


// let sum = 0;  // ищем сумму элементов массива
// for (let i = 0; i < 5; i++) {   
//     sum += arr[i]; 
// }
// console.log(sum);


// console.log(Math.min(...arr)); // ищем минимальное число



// это мое первое решение нахождения суммы (топорное)
// function findMin(arg1, arg2, arg3, arg4, arg5) {
//     if (arg1 > arg2 && arg1 > arg3) {
        
//     }
//     let s = arg1 + arg2 + arg3 + arg4 + arg5;
//     console.log(s);
// }
// sum(a, b, c, d, e);




// *Необязательное задание. *
// Необходимо вывести горку в консоль (используя цикл for), как показано на рисунке, только у вашей горки должно быть 20 рядов, а не 5:

// x
// xx
// xxx
// xxxx
// xxxxx

// let gorka = "x";
// for (let i = 0; i < 20; i++) {
//     console.log(gorka = gorka + "x");  // не понятно почему начинется с двух иксов 
// }



